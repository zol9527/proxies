name: Proxy Deploy
description: 🤖 自动爬取并更新代理IP列表

on:
  schedule:
    - cron: '*/30 * * * *'  # 每20分钟执行一次
  workflow_dispatch:  # 允许手动触发

permissions:
  contents: write

jobs:
  deploy:
    runs-on: ubuntu-latest
    concurrency:
      group: ${{ github.workflow }}-proxy-deploy
      cancel-in-progress: true
    steps:
      - name: 📥 检出代码
        uses: actions/checkout@v4
        with:
          ref: dev
          fetch-depth: 0  # 获取完整历史，避免推送冲突
      
      - name: 🔧 设置Go环境
        uses: actions/setup-go@v5
        with:
          go-version: '1.23.5'
      
      - name: 📦 缓存Go依赖
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      
      - name: ⚙️ 安装依赖
        run: go mod download

      - name: 🔐 配置仓库权限
        run: |
          echo "🔑 配置 GitHub Token 权限..."
          git config --global url."https://${{ github.token }}@github.com/".insteadOf "https://github.com/"
          # 验证权限
          echo "✅ GitHub 权限配置完成"
          
      - name: 🏃 运行代码
        run: |
          echo "🔄 开始执行代理IP爬取任务..."
          # 尝试多个可能的入口点
          go run ./cmd/main.go || go run ./main.go || echo "❌ 找不到主程序入口"
          echo "✅ 爬取任务执行完毕"
      
      - name: 💾 提交更改
        run: |
          git config --global user.name 'GitHub Actions Bot'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          
          # 检查是否有新的代理IP文件生成
          if [[ -f ip.txt ]]; then
            echo "📋 发现新的代理IP列表"
            # 计算新发现的代理IP数量
            IP_COUNT=$(wc -l < ip.txt)
            git add ip.txt
            git diff --quiet && git diff --staged --quiet || git commit -m "🤖 自动更新：发现 ${IP_COUNT} 个可用代理IP"
          else
            echo "📋 没有发现新的代理IP列表"
            # 添加所有可能的更改
            git add .
            git diff --quiet && git diff --staged --quiet || git commit -m "🤖 自动更新：运行代码生成的更改"
          fi
      
      - name: 🚀 推送更改
        run: |
          echo "📤 正在推送更改到仓库..."
          git push || (git pull --rebase && git push)
          echo "✅ 更改已成功推送"
